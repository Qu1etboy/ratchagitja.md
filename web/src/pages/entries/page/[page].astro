---
import { Fragment } from "astro/dist/runtime/server";
import { getCollection } from "astro:content"
import BaseHead from "../../../components/BaseHead.astro";
import Footer from "../../../components/Footer.astro";
import Header from "../../../components/Header.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../../consts";


export async function getStaticPaths({ paginate }) {
  const entries = (
    await getCollection("ratchagitja")
  )

  return paginate(entries, { pageSize: 50 })
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props
---


<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul>
					{
						entries.map((entry) => (
							<li>
								<a href={`/entries/${entry.slug}`}>
									<h4 class="title">{entry.data.เรื่อง || entry.data.name}</h4>
								</a>
							</li>
						))
					}
				</ul>
			</section>


    <nav class="flex justify-between mt-8">
      {
        page.url.prev ? (
          <a href={page.url.prev} class="no-underline">
            ← Prev
          </a>
        ) : (
          <div />
        )
      }
      <span>{page.currentPage}</span>
      {
        page.url.next ? (
          <a href={page.url.next} class="no-underline">
            Next →
          </a>
        ) : (
          <div />
        )
      }
    </nav>
		</main>
		<Footer />
	</body>
</html>
